services:
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: memesearch-elastic
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
    mem_limit: 1GB
    labels:
      logging: "promtail"
      logging_jobname: "container_logs"
    ports:
      - 9200:9200
    volumes:
      - "./data/elastic:/usr/share/elasticsearch/data"

  rabbitmq:
    image: rabbitmq:3
    hostname: rabbitmq
    container_name: memesearch-rabbitmq
    labels:
      logging: "promtail"
      logging_jobname: "container_logs"
    ports:
      - 5672:5672
    volumes:
      - "./data/rabbitmq:/var/lib/rabbitmq/mnesia/"

  loki:
    container_name: loki
    hostname: loki
    image: grafana/loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki:/etc/loki
  
  promtail:
    container_name: promtail
    hostname: promtail
    image: grafana/promtail
    command: -config.file=/etc/promtail/docker-config.yaml
    volumes:
      - ./data/promtail:/var/lib/promtail
      - ./promtail/docker-config.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logs:/var/log
    depends_on:
      - loki

  grafana:
    container_name: grafana
    hostname: grafana
    image: grafana/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      # - GF_SECURITY_ADMIN_PASSWORD=admin
      # - GF_SECURITY_ADMIN_USER=admin
    ports:
      - 3001:3000
    volumes:
      - ./data/grafana:/var/lib/grafana
      # - ./data/grafana/conf:/etc/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki

  # Extended containers

  mysql:
    container_name: memesearch-mysql
    networks:
      - telegram-api-server
    extends:
      file: ../TelegramApiServer/docker-compose.yml
      service: mysql

  telegram-api-server:
    container_name: api
    networks:
      - telegram-api-server
    extends:
      file: ../TelegramApiServer/docker-compose.yml
      service: api
    env_file:
      - ../TelegramApiServer/.env.docker
      - ./.env
    depends_on:
      - mysql

  telegram-rss:
    container_name: memesearch-telegram-rss
    networks:
      - telegram-api-server
    extends:
      file: ../TelegramRSS/docker-compose.yml
      service: telegram-rss
    depends_on:
      - telegram-api-server

networks:
  default:
    driver: bridge
    name: memesearch
  telegram-api-server:
    driver: bridge
    name: telegram-api-server
